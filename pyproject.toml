[project]
name = "PyCCX"
dynamic = ["version"]
description = "Simulation and FEA environment for Python built upon Calculix and GMSH"
readme = "README.rst"
license = {file = "LICENSE"}
requires-python = ">=3.8"
authors = [
    { name = "Luke Parry", email = "dev@lukeparry.uk" },
    { name = "Luktug", email = "contact@luktug.co.uk" }
]
keywords = [
    "FEA",
    "Finite Element Analysis",
    "Simulation",
    "Calculix",
    "GMSH"
]
classifiers = [
    "License :: OSI Approved :: BSD License",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Scientific/Engineering",
]
dependencies = [
    "matplotlib",
    "gmsh>4.13",
    "numpy>1.21",
    "colorlog"
]

[project.optional-dependencies]
docs = [
    'numpy',
    'sphinx',
    'jupyter',
    'sphinx_rtd_theme',
    'sphinx-paramlinks',
    'pypandoc',
    'autodocsumm',
    'matplotlib',
    'trimesh',
]
build = ["build", "hatchling", "requests", "twine"]
codegen = ["pytest", "numpy"]
lint = ["ruff", "pre-commit"]

[project.urls]
Homepage = "https://github.com/drlukeparry/pyccx"
Documentation = "https://pyccx.readthedocs.io/en/latest/"
Source = "https://github.com/drlukeparry/pyccx/"
Tracker = "https://github.com/drlukeparry/pyccx/issues"

[build-system]
requires = ["requests", "hatchling",   "setuptools"]
build-backend = "hatchling.build"

[tool.hatch.version]
path = "pyccx/version.py"

[tool.hatch.build.targets.sdist]
include = [
    "pyccx",
    "examples",
    "docs"
]

[tool.hatch.build.targets.wheel]
include = [
    "pyccx",
    "examples",
    "docs"
]


[tool.ruff.lint]
select = ["F", "E", "W", "N", "B", "RUF"]
exclude = ["build/", "examples/", "docs/", "tests/", "__pycache__", ".github"]
ignore = [
    "E501",   # Line too long
    "N802",   # Function name should be lowercase
    "N803",  # Argument name should be lowercase
    "N806",  # Variable in function should be lowercase
    "E731",   # Do not assign a `lambda` expression, use a `def`
]

[tool.mypy]
python_version = "3.9"
strict = true
show_error_codes = true
enable_error_code = ["ignore-without-code", "redundant-expr", "truthy-bool"]
disable_error_code = ["import-untyped"]
warn_unreachable = true
warn_return_any = true
warn_unused_configs = true
warn_unused_ignores = true
strict_optional = true
ignore_missing_imports = true
check_untyped_defs = true
disallow_untyped_defs = true
no_implicit_optional = true